<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Client Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Mobile Header */
        .mobile-header {
            display: none;
            background: white;
            padding: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1001;
            align-items: center;
            gap: 1rem;
        }

        .mobile-header .sidebar-toggle {
            display: block;
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #333;
            padding: 0.5rem;
        }

        .mobile-header .logo {
            width: 32px;
            height: 32px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1rem;
        }

        .mobile-header h1 {
            font-size: 1.2rem;
            font-weight: 600;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 250px;
            background-color: #fff;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
            position: fixed;
            height: 100vh;
            z-index: 1000;
            overflow-y: auto;
        }

        .sidebar-header {
            padding: 1.5rem;
            border-bottom: 1px solid #e0e0e0;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .logo {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .sidebar-toggle {
            display: none;
        }

        .nav-menu {
            list-style: none;
            padding: 1rem 0;
        }

        .nav-item {
            margin: 0.25rem 0;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            color: #666;
            text-decoration: none;
            transition: all 0.3s ease;
            border-right: 3px solid transparent;
        }

        .nav-link:hover {
            background-color: #f8f9fa;
            color: #4285f4;
        }

        .nav-item.active .nav-link {
            background-color: #e3f2fd;
            color: #4285f4;
            border-right-color: #4285f4;
        }

        .nav-link i {
            margin-right: 0.75rem;
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 250px;
            padding: 2rem;
            transition: margin-left 0.3s ease;
            min-height: 100vh;
        }

        .page {
            display: none;
        }

        .page.active {
            display: block;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .page-header h1 {
            font-size: 2rem;
            font-weight: 600;
            color: #333;
        }

        /* Dashboard Grid */
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        /* Stats Cards Grid - 2x2 layout */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
            margin-bottom: 2rem;
            max-width: 600px; /* Constrain the width to keep 2x2 layout */
        }

        /* Card Styles */
        .card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            border: 1px solid #f0f0f0;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);
        }

        .card h3 {
            margin-bottom: 1rem;
            color: #333;
            font-weight: 600;
            font-size: 1.1rem;
        }

        /* Client Status Card */
        .client-status-card {
            grid-column: span 1;
        }

        .status-list {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .status-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid #f0f0f0;
        }

        .status-item:last-child {
            border-bottom: none;
        }

        .status-label {
            color: #666;
            font-weight: 500;
        }

        .status-value {
            font-weight: 600;
            color: #333;
            background: #f8f9fa;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            min-width: 30px;
            text-align: center;
        }

        /* Stat Cards */
        .stat-card {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .stat-card.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .stat-card.primary .stat-icon {
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .stat-card.primary .stat-number {
            color: white;
        }

        .stat-card.primary .stat-label {
            color: rgba(255, 255, 255, 0.9);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            background: #f8f9fa;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            color: #4285f4;
            flex-shrink: 0;
        }

        .stat-content {
            flex: 1;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: 700;
            line-height: 1;
            margin-bottom: 0.25rem;
        }

        .stat-label {
            font-size: 0.85rem;
            opacity: 0.8;
            line-height: 1.3;
        }

        /* Invoice Status Card */
        .invoice-status-card {
            grid-column: span 2;
        }

        .invoice-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
            text-align: center;
        }

        .invoice-stat {
            padding: 1.5rem 1rem;
            border-radius: 8px;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
        }

        .invoice-amount {
            font-size: 1.8rem;
            font-weight: 700;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .invoice-label {
            font-size: 0.9rem;
            color: #666;
            font-weight: 500;
        }

        /* Client Sources Card */
        .client-sources-card {
            grid-column: span 1;
        }

        .sources-legend {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.9rem;
            padding: 0.25rem 0;
        }

        .legend-color {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            flex-shrink: 0;
        }

        /* Priority Card */
        .priority-card {
            grid-column: span 1;
        }

        .priority-stats {
            display: flex;
            justify-content: space-around;
            text-align: center;
            gap: 1rem;
        }

        .priority-item {
            flex: 1;
            padding: 1rem;
            border-radius: 8px;
            background: #f8f9fa;
        }

        .priority-number {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .priority-number.high {
            color: #ea4335;
        }

        .priority-number.medium {
            color: #fbbc04;
        }

        .priority-number.low {
            color: #34a853;
        }

        .priority-label {
            font-size: 0.9rem;
            color: #666;
            font-weight: 500;
        }

        /* Tasks Due Card */
        .tasks-due-card {
            grid-column: span 2;
        }

        .tasks-timeline {
            display: flex;
            justify-content: space-between;
            text-align: center;
            gap: 0.5rem;
        }

        .task-day {
            flex: 1;
            padding: 1rem;
            border-radius: 8px;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
        }

        .task-count {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .task-date {
            font-size: 0.8rem;
            color: #666;
        }

        /* Button Styles */
        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            font-size: 0.9rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #666;
            border: 1px solid #e0e0e0;
        }

        .btn-secondary:hover {
            background: #e9ecef;
        }

        /* Table Styles */
        .table-container {
            overflow-x: auto;
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
        }

        .data-table th,
        .data-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
        }

        .data-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #333;
        }

        .no-data {
            text-align: center;
            color: #666;
            font-style: italic;
        }

        /* Task Board */
        .tasks-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
        }

        .task-column {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            border: 1px solid #f0f0f0;
        }

        .task-column h3 {
            margin-bottom: 1rem;
            color: #333;
            font-weight: 600;
        }

        .task-list {
            min-height: 200px;
        }

        .empty-state {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 2rem;
        }

        /* Calendar */
        .calendar-container {
            max-width: 800px;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
            background: #e0e0e0;
            border-radius: 8px;
            overflow: hidden;
        }

        .calendar-day {
            background: white;
            padding: 1rem;
            min-height: 80px;
            display: flex;
            align-items: flex-start;
            justify-content: flex-start;
        }

        .calendar-day.other-month {
            background: #f8f9fa;
            color: #ccc;
        }

        .calendar-day.today {
            background: #e3f2fd;
            color: #4285f4;
            font-weight: 600;
        }

        /* Projects Grid */
        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .empty-state-card {
            background: white;
            border-radius: 12px;
            padding: 3rem;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            border: 1px solid #f0f0f0;
        }

        .empty-state-card i {
            font-size: 3rem;
            color: #ccc;
            margin-bottom: 1rem;
        }

        .empty-state-card h3 {
            margin-bottom: 0.5rem;
            color: #333;
        }

        .empty-state-card p {
            color: #666;
            margin-bottom: 1.5rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .mobile-header {
                display: flex;
            }

            .sidebar {
                transform: translateX(-100%);
            }
            
            .sidebar.open {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
                padding: 1rem;
                padding-top: 80px; /* Account for mobile header */
            }
            
            .dashboard-grid {
                grid-template-columns: 1fr;
            }

            .stats-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
                max-width: none;
            }
            
            .invoice-status-card {
                grid-column: span 1;
            }
            
            .tasks-due-card {
                grid-column: span 1;
            }
            
            .invoice-stats {
                grid-template-columns: 1fr;
                gap: 1rem;
            }
            
            .tasks-timeline {
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .tasks-grid {
                grid-template-columns: 1fr;
            }
            
            .page-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
            
            .priority-stats {
                flex-direction: column;
                gap: 1rem;
            }

            .calendar-day {
                min-height: 60px;
                padding: 0.5rem;
            }
        }

        @media (min-width: 769px) {
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                max-width: 600px;
            }
        }

        @media (max-width: 480px) {
            .main-content {
                padding: 0.5rem;
                padding-top: 80px;
            }
            
            .card {
                padding: 1rem;
            }
            
            .stat-card {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }
            
            .stat-icon {
                margin-bottom: 0;
            }

            .invoice-stats {
                gap: 0.5rem;
            }

            .invoice-stat {
                padding: 1rem 0.5rem;
            }

            .tasks-timeline .task-day {
                padding: 0.75rem;
            }
        }

        /* Mobile Navigation Overlay */
        @media (max-width: 768px) {
            .sidebar::before {
                content: '';
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0, 0, 0, 0.5);
                opacity: 0;
                visibility: hidden;
                transition: all 0.3s ease;
                z-index: -1;
            }
            
            .sidebar.open::before {
                opacity: 1;
                visibility: visible;
            }
        }

        /* Animation for page transitions */
        .page {
            animation: fadeIn 0.3s ease-in-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes ripple {
            to {
                transform: scale(2);
                opacity: 0;
            }
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Mobile Header -->
        <div class="mobile-header" id="mobileHeader">
            <button class="sidebar-toggle" id="mobileToggle">
                <i class="fas fa-bars"></i>
            </button>
            <div class="logo">
                <i class="fas fa-chart-line"></i>
            </div>
            <h1>Dashboard</h1>
        </div>

        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <div class="logo">
                    <i class="fas fa-chart-line"></i>
                </div>
                <span style="font-weight: 600; color: #333;">Dashboard</span>
            </div>
            
            <ul class="nav-menu">
                <li class="nav-item active" data-page="dashboard">
                    <a href="#" class="nav-link">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="nav-item" data-page="clients">
                    <a href="#" class="nav-link">
                        <i class="fas fa-users"></i>
                        <span>Client List</span>
                    </a>
                </li>
                <li class="nav-item" data-page="calls">
                    <a href="#" class="nav-link">
                        <i class="fas fa-phone"></i>
                        <span>Call Log</span>
                    </a>
                </li>
                <li class="nav-item" data-page="emails">
                    <a href="#" class="nav-link">
                        <i class="fas fa-envelope"></i>
                        <span>Email Log</span>
                    </a>
                </li>
                <li class="nav-item" data-page="tasks">
                    <a href="#" class="nav-link">
                        <i class="fas fa-tasks"></i>
                        <span>Task List</span>
                    </a>
                </li>
                <li class="nav-item" data-page="calendar">
                    <a href="#" class="nav-link">
                        <i class="fas fa-calendar"></i>
                        <span>Calendar</span>
                    </a>
                </li>
                <li class="nav-item" data-page="projects">
                    <a href="#" class="nav-link">
                        <i class="fas fa-project-diagram"></i>
                        <span>Project List</span>
                    </a>
                </li>
                <li class="nav-item" data-page="meetings">
                    <a href="#" class="nav-link">
                        <i class="fas fa-video"></i>
                        <span>Meeting List</span>
                    </a>
                </li>
                <li class="nav-item" data-page="invoices">
                    <a href="#" class="nav-link">
                        <i class="fas fa-file-invoice"></i>
                        <span>Invoice Log</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Dashboard Page -->
            <div class="page active" id="dashboard">
                <div class="page-header">
                    <h1>Client Dashboard</h1>
                </div>
                
                <div class="dashboard-grid">
                    <!-- Client Status Card -->
                    <div class="card client-status-card">
                        <h3>Client Status</h3>
                        <div class="status-list">
                            <div class="status-item">
                                <span class="status-label">Won</span>
                                <span class="status-value">0</span>
                            </div>
                            <div class="status-item">
                                <span class="status-label">Lost</span>
                                <span class="status-value">0</span>
                            </div>
                            <div class="status-item">
                                <span class="status-label">Status 1</span>
                                <span class="status-value">0</span>
                            </div>
                            <div class="status-item">
                                <span class="status-label">Status 2</span>
                                <span class="status-value">0</span>
                            </div>
                            <div class="status-item">
                                <span class="status-label">Status 3</span>
                                <span class="status-value">0</span>
                            </div>
                            <div class="status-item">
                                <span class="status-label">Status 4</span>
                                <span class="status-value">0</span>
                            </div>
                        </div>
                    </div>

                    <!-- Stats Cards in 2x2 Grid -->
                    <div class="stats-grid">
                        <div class="card stat-card primary">
                            <div class="stat-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-number">0</div>
                                <div class="stat-label">Total Active Clients</div>
                            </div>
                        </div>

                        <div class="card stat-card">
                            <div class="stat-icon">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-number">0</div>
                                <div class="stat-label">Total Tasks Not Completed</div>
                            </div>
                        </div>

                        <div class="card stat-card">
                            <div class="stat-icon">
                                <i class="fas fa-file-invoice-dollar"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-number">0</div>
                                <div class="stat-label">Total Invoices Unpaid</div>
                            </div>
                        </div>

                        <div class="card stat-card">
                            <div class="stat-icon">
                                <i class="fas fa-briefcase"></i>
                            </div>
                            <div class="stat-content">
                                <div class="stat-number">0</div>
                                <div class="stat-label">Total Ongoing Projects</div>
                            </div>
                        </div>
                    </div>

                    <!-- Invoice Status Card -->
                    <div class="card invoice-status-card">
                        <h3>Total Value In Each Invoice Status</h3>
                        <div class="invoice-stats">
                            <div class="invoice-stat">
                                <div class="invoice-amount">0.00</div>
                                <div class="invoice-label">Unpaid</div>
                            </div>
                            <div class="invoice-stat">
                                <div class="invoice-amount">0.00</div>
                                <div class="invoice-label">Partially Paid</div>
                            </div>
                            <div class="invoice-stat">
                                <div class="invoice-amount">0.00</div>
                                <div class="invoice-label">Paid</div>
                            </div>
                        </div>
                    </div>

                    <!-- Client Sources Card -->
                    <div class="card client-sources-card">
                        <h3>Client Sources</h3>
                        <div class="sources-legend">
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #4285f4;"></span>
                                <span>Phone Outreach</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #ea4335;"></span>
                                <span>Website</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #fbbc04;"></span>
                                <span>Email Campaign</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #34a853;"></span>
                                <span>Advertisement</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #ff6d01;"></span>
                                <span>Networking</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #1da1f2;"></span>
                                <span>Social Media</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #9c27b0;"></span>
                                <span>Referral</span>
                            </div>
                            <div class="legend-item">
                                <span class="legend-color" style="background-color: #0077b5;"></span>
                                <span>LinkedIn</span>
                            </div>
                        </div>
                    </div>

                    <!-- Priority Card -->
                    <div class="card priority-card">
                        <h3>Clients By Priority</h3>
                        <div class="priority-stats">
                            <div class="priority-item">
                                <div class="priority-number high">0</div>
                                <div class="priority-label">High</div>
                            </div>
                            <div class="priority-item">
                                <div class="priority-number medium">0</div>
                                <div class="priority-label">Medium</div>
                            </div>
                            <div class="priority-item">
                                <div class="priority-number low">0</div>
                                <div class="priority-label">Low</div>
                            </div>
                        </div>
                    </div>

                    <!-- Tasks Due Card -->
                    <div class="card tasks-due-card">
                        <h3>Tasks Due In The Next 5 Days</h3>
                        <div class="tasks-timeline">
                            <div class="task-day">
                                <div class="task-count">0</div>
                                <div class="task-date">25/04/2025</div>
                            </div>
                            <div class="task-day">
                                <div class="task-count">0</div>
                                <div class="task-date">26/04/2025</div>
                            </div>
                            <div class="task-day">
                                <div class="task-count">0</div>
                                <div class="task-date">27/04/2025</div>
                            </div>
                            <div class="task-day">
                                <div class="task-count">0</div>
                                <div class="task-date">28/04/2025</div>
                            </div>
                            <div class="task-day">
                                <div class="task-count">0</div>
                                <div class="task-date">29/04/2025</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Client List Page -->
            <div class="page" id="clients">
                <div class="page-header">
                    <h1>Client List</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Add Client
                    </button>
                </div>
                
                <div class="card">
                    <div class="table-container">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>Status</th>
                                    <th>Priority</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="6" class="no-data">No clients found</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Call Log Page -->
            <div class="page" id="calls">
                <div class="page-header">
                    <h1>Call Log</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Log Call
                    </button>
                </div>
                
                <div class="card">
                    <div class="table-container">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Client</th>
                                    <th>Duration</th>
                                    <th>Type</th>
                                    <th>Notes</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="6" class="no-data">No calls logged</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Email Log Page -->
            <div class="page" id="emails">
                <div class="page-header">
                    <h1>Email Log</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Compose Email
                    </button>
                </div>
                
                <div class="card">
                    <div class="table-container">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>To</th>
                                    <th>Subject</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="5" class="no-data">No emails sent</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Task List Page -->
            <div class="page" id="tasks">
                <div class="page-header">
                    <h1>Task List</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Add Task
                    </button>
                </div>
                
                <div class="tasks-grid">
                    <div class="task-column">
                        <h3>To Do</h3>
                        <div class="task-list" data-status="todo">
                            <div class="empty-state">No tasks</div>
                        </div>
                    </div>
                    <div class="task-column">
                        <h3>In Progress</h3>
                        <div class="task-list" data-status="progress">
                            <div class="empty-state">No tasks</div>
                        </div>
                    </div>
                    <div class="task-column">
                        <h3>Completed</h3>
                        <div class="task-list" data-status="completed">
                            <div class="empty-state">No tasks</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Calendar Page -->
            <div class="page" id="calendar">
                <div class="page-header">
                    <h1>Calendar</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Add Event
                    </button>
                </div>
                
                <div class="card">
                    <div class="calendar-container">
                        <div class="calendar-header">
                            <button class="btn btn-secondary" id="prevMonth">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <h3 id="currentMonth">January 2025</h3>
                            <button class="btn btn-secondary" id="nextMonth">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>
                        <div class="calendar-grid" id="calendarGrid">
                            <!-- Calendar will be generated by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Project List Page -->
            <div class="page" id="projects">
                <div class="page-header">
                    <h1>Project List</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        New Project
                    </button>
                </div>
                
                <div class="projects-grid">
                    <div class="empty-state-card">
                        <i class="fas fa-project-diagram"></i>
                        <h3>No Projects Yet</h3>
                        <p>Create your first project to get started</p>
                        <button class="btn btn-primary">Create Project</button>
                    </div>
                </div>
            </div>

            <!-- Meeting List Page -->
            <div class="page" id="meetings">
                <div class="page-header">
                    <h1>Meeting List</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Schedule Meeting
                    </button>
                </div>
                
                <div class="card">
                    <div class="table-container">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Date & Time</th>
                                    <th>Title</th>
                                    <th>Participants</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="5" class="no-data">No meetings scheduled</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Invoice Log Page -->
            <div class="page" id="invoices">
                <div class="page-header">
                    <h1>Invoice Log</h1>
                    <button class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Create Invoice
                    </button>
                </div>
                
                <div class="card">
                    <div class="table-container">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Invoice #</th>
                                    <th>Client</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Due Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="6" class="no-data">No invoices created</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        class Dashboard {
            constructor() {
                this.currentPage = 'dashboard';
                this.sidebarOpen = false;
                this.currentMonth = new Date().getMonth();
                this.currentYear = new Date().getFullYear();
                
                this.init();
            }
            
            init() {
                this.setupEventListeners();
                this.generateCalendar();
                this.updateTasksDue();
                this.updateMobileHeader();
            }
            
            setupEventListeners() {
                // Sidebar navigation
                const navItems = document.querySelectorAll('.nav-item');
                navItems.forEach(item => {
                    item.addEventListener('click', (e) => {
                        e.preventDefault();
                        const page = item.dataset.page;
                        this.navigateToPage(page);
                    });
                });
                
                // Mobile sidebar toggle
                const mobileToggle = document.getElementById('mobileToggle');
                if (mobileToggle) {
                    mobileToggle.addEventListener('click', () => {
                        this.toggleSidebar();
                    });
                }
                
                // Calendar navigation
                const prevMonth = document.getElementById('prevMonth');
                const nextMonth = document.getElementById('nextMonth');
                
                if (prevMonth) {
                    prevMonth.addEventListener('click', () => {
                        this.currentMonth--;
                        if (this.currentMonth < 0) {
                            this.currentMonth = 11;
                            this.currentYear--;
                        }
                        this.generateCalendar();
                    });
                }
                
                if (nextMonth) {
                    nextMonth.addEventListener('click', () => {
                        this.currentMonth++;
                        if (this.currentMonth > 11) {
                            this.currentMonth = 0;
                            this.currentYear++;
                        }
                        this.generateCalendar();
                    });
                }
                
                // Close sidebar when clicking outside on mobile
                document.addEventListener('click', (e) => {
                    const sidebar = document.getElementById('sidebar');
                    const mobileToggle = document.getElementById('mobileToggle');
                    
                    if (window.innerWidth <= 768 && 
                        this.sidebarOpen && 
                        !sidebar.contains(e.target) && 
                        !mobileToggle.contains(e.target)) {
                        this.toggleSidebar();
                    }
                });
                
                // Handle window resize
                window.addEventListener('resize', () => {
                    if (window.innerWidth > 768) {
                        const sidebar = document.getElementById('sidebar');
                        sidebar.classList.remove('open');
                        this.sidebarOpen = false;
                    }
                });
                
                // Add button click handlers
                this.setupButtonHandlers();
            }
            
            setupButtonHandlers() {
                // Add event listeners for all action buttons
                const buttons = document.querySelectorAll('.btn');
                buttons.forEach(button => {
                    if (!button.id && !button.closest('.calendar-header')) {
                        button.addEventListener('click', (e) => {
                            e.preventDefault();
                            this.showNotification('Feature coming soon!', 'info');
                        });
                    }
                });
            }
            
            navigateToPage(page) {
                // Hide all pages
                const pages = document.querySelectorAll('.page');
                pages.forEach(p => p.classList.remove('active'));
                
                // Show selected page
                const targetPage = document.getElementById(page);
                if (targetPage) {
                    targetPage.classList.add('active');
                }
                
                // Update navigation
                const navItems = document.querySelectorAll('.nav-item');
                navItems.forEach(item => item.classList.remove('active'));
                
                const activeNavItem = document.querySelector(`[data-page="${page}"]`);
                if (activeNavItem) {
                    activeNavItem.classList.add('active');
                }
                
                this.currentPage = page;
                
                // Update mobile header title
                this.updateMobileHeader();
                
                // Close sidebar on mobile after navigation
                if (window.innerWidth <= 768) {
                    this.toggleSidebar();
                }
                
                // Update page-specific content
                this.updatePageContent(page);
            }
            
            updateMobileHeader() {
                const mobileHeader = document.querySelector('.mobile-header h1');
                if (mobileHeader) {
                    const pageNames = {
                        dashboard: 'Dashboard',
                        clients: 'Client List',
                        calls: 'Call Log',
                        emails: 'Email Log',
                        tasks: 'Task List',
                        calendar: 'Calendar',
                        projects: 'Project List',
                        meetings: 'Meeting List',
                        invoices: 'Invoice Log'
                    };
                    mobileHeader.textContent = pageNames[this.currentPage] || 'Dashboard';
                }
            }
            
            updatePageContent(page) {
                switch (page) {
                    case 'calendar':
                        this.generateCalendar();
                        break;
                    case 'dashboard':
                        this.updateDashboardStats();
                        break;
                    default:
                        break;
                }
            }
            
            toggleSidebar() {
                const sidebar = document.getElementById('sidebar');
                sidebar.classList.toggle('open');
                this.sidebarOpen = !this.sidebarOpen;
            }
            
            generateCalendar() {
                const calendarGrid = document.getElementById('calendarGrid');
                const currentMonthElement = document.getElementById('currentMonth');
                
                if (!calendarGrid || !currentMonthElement) return;
                
                const monthNames = [
                    'January', 'February', 'March', 'April', 'May', 'June',
                    'July', 'August', 'September', 'October', 'November', 'December'
                ];
                
                const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
                
                currentMonthElement.textContent = `${monthNames[this.currentMonth]} ${this.currentYear}`;
                
                // Clear calendar
                calendarGrid.innerHTML = '';
                
                // Add day headers
                dayNames.forEach(day => {
                    const dayHeader = document.createElement('div');
                    dayHeader.className = 'calendar-day-header';
                    dayHeader.textContent = day;
                    dayHeader.style.cssText = `
                        background: #f8f9fa;
                        padding: 0.5rem;
                        text-align: center;
                        font-weight: 600;
                        color: #666;
                        font-size: 0.8rem;
                    `;
                    calendarGrid.appendChild(dayHeader);
                });
                
                // Get first day of month and number of days
                const firstDay = new Date(this.currentYear, this.currentMonth, 1).getDay();
                const daysInMonth = new Date(this.currentYear, this.currentMonth + 1, 0).getDate();
                const today = new Date();
                
                // Add empty cells for days before month starts
                for (let i = 0; i < firstDay; i++) {
                    const emptyDay = document.createElement('div');
                    emptyDay.className = 'calendar-day other-month';
                    calendarGrid.appendChild(emptyDay);
                }
                
                // Add days of the month
                for (let day = 1; day <= daysInMonth; day++) {
                    const dayElement = document.createElement('div');
                    dayElement.className = 'calendar-day';
                    dayElement.textContent = day;
                    
                    // Highlight today
                    if (this.currentYear === today.getFullYear() && 
                        this.currentMonth === today.getMonth() && 
                        day === today.getDate()) {
                        dayElement.classList.add('today');
                    }
                    
                    calendarGrid.appendChild(dayElement);
                }
            }
            
            updateTasksDue() {
                // Update the tasks due dates to show current dates
                const taskDays = document.querySelectorAll('.task-day');
                const today = new Date();
                
                taskDays.forEach((taskDay, index) => {
                    const futureDate = new Date(today);
                    futureDate.setDate(today.getDate() + index);
                    
                    const dateElement = taskDay.querySelector('.task-date');
                    if (dateElement) {
                        const formattedDate = futureDate.toLocaleDateString('en-GB', {
                            day: '2-digit',
                            month: '2-digit',
                            year: 'numeric'
                        });
                        dateElement.textContent = formattedDate;
                    }
                });
            }
            
            updateDashboardStats() {
                // Simulate loading and updating stats
                const statNumbers = document.querySelectorAll('.stat-number');
                
                // You can replace these with actual data fetching
                const mockData = {
                    activeClients: Math.floor(Math.random() * 50),
                    incompleteTasks: Math.floor(Math.random() * 20),
                    unpaidInvoices: Math.floor(Math.random() * 15),
                    ongoingProjects: Math.floor(Math.random() * 10)
                };
                
                // Animate number updates
                this.animateNumbers(statNumbers, [
                    mockData.activeClients,
                    mockData.incompleteTasks,
                    mockData.unpaidInvoices,
                    mockData.ongoingProjects
                ]);
            }
            
            animateNumbers(elements, targetValues) {
                elements.forEach((element, index) => {
                    if (targetValues[index] !== undefined) {
                        const startValue = parseInt(element.textContent) || 0;
                        const endValue = targetValues[index];
                        const duration = 1000;
                        const startTime = Date.now();
                        
                        const updateNumber = () => {
                            const elapsed = Date.now() - startTime;
                            const progress = Math.min(elapsed / duration, 1);
                            const currentValue = Math.floor(startValue + (endValue - startValue) * progress);
                            
                            element.textContent = currentValue;
                            
                            if (progress < 1) {
                                requestAnimationFrame(updateNumber);
                            }
                        };
                        
                        updateNumber();
                    }
                });
            }
            
            showNotification(message, type = 'info') {
                // Create notification element
                const notification = document.createElement('div');
                notification.className = `notification notification-${type}`;
                notification.textContent = message;
                
                // Style the notification
                notification.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    padding: 1rem 1.5rem;
                    background: ${type === 'info' ? '#4285f4' : type === 'success' ? '#34a853' : '#ea4335'};
                    color: white;
                    border-radius: 8px;
                    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
                    z-index: 10000;
                    transform: translateX(100%);
                    transition: transform 0.3s ease;
                `;
                
                document.body.appendChild(notification);
                
                // Animate in
                setTimeout(() => {
                    notification.style.transform = 'translateX(0)';
                }, 100);
                
                // Remove after 3 seconds
                setTimeout(() => {
                    notification.style.transform = 'translateX(100%)';
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }, 3000);
            }
        }

        // Initialize dashboard when DOM is loaded
        document.addEventListener('DOMContentLoaded', () => {
            new Dashboard();
        });

        // Add some interactive features
        document.addEventListener('DOMContentLoaded', () => {
            // Add hover effects to cards
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', () => {
                    if (!card.style.transform.includes('translateY')) {
                        card.style.transform = 'translateY(-4px)';
                    }
                });
                
                card.addEventListener('mouseleave', () => {
                    card.style.transform = 'translateY(0)';
                });
            });
            
            // Add click effects to buttons
            const buttons = document.querySelectorAll('.btn');
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    // Create ripple effect
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.cssText = `
                        position: absolute;
                        width: ${size}px;
                        height: ${size}px;
                        left: ${x}px;
                        top: ${y}px;
                        background: rgba(255, 255, 255, 0.3);
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s linear;
                        pointer-events: none;
                    `;
                    
                    this.style.position = 'relative';
                    this.style.overflow = 'hidden';
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });
    </script>
</body>
</html>
